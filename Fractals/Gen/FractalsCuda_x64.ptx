	.version 1.4
	.target sm_11, map_f64_to_f32
	// compiled with C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v5.0\bin\/../open64/lib//be.exe
	// nvopencc 4.1 built on 2012-09-25

	//-----------------------------------------------------------
	// Compiling C:/Users/Dawid/AppData/Local/Temp/tmpxft_00001814_00000000-11_FractalsCuda.cpp3.i (C:/Users/Dawid/AppData/Local/Temp/ccBI#.a01128)
	//-----------------------------------------------------------

	//-----------------------------------------------------------
	// Options:
	//-----------------------------------------------------------
	//  Target:ptx, ISA:sm_11, Endian:little, Pointer Size:64
	//  -O3	(Optimization level)
	//  -g0	(Debug level)
	//  -m2	(Report advisories)
	//-----------------------------------------------------------

	.file	1	"C:/Users/Dawid/AppData/Local/Temp/tmpxft_00001814_00000000-10_FractalsCuda.cudafe2.gpu"
	.file	2	"C:/Users/Dawid/Documents/Visual Studio 2010/Projects/Parallelity/Fractals/Gen/FractalsCuda.cu"
	.file	3	"c:\program files (x86)\microsoft visual studio 10.0\vc\include\codeanalysis\sourceannotations.h"
	.file	4	"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v5.0\bin\/../include\crt/device_runtime.h"
	.file	5	"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v5.0\bin\/../include\host_defines.h"
	.file	6	"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v5.0\bin\/../include\builtin_types.h"
	.file	7	"c:\program files\nvidia gpu computing toolkit\cuda\v5.0\include\device_types.h"
	.file	8	"c:\program files\nvidia gpu computing toolkit\cuda\v5.0\include\host_defines.h"
	.file	9	"c:\program files\nvidia gpu computing toolkit\cuda\v5.0\include\driver_types.h"
	.file	10	"c:\program files\nvidia gpu computing toolkit\cuda\v5.0\include\surface_types.h"
	.file	11	"c:\program files\nvidia gpu computing toolkit\cuda\v5.0\include\texture_types.h"
	.file	12	"c:\program files\nvidia gpu computing toolkit\cuda\v5.0\include\vector_types.h"
	.file	13	"c:\program files\nvidia gpu computing toolkit\cuda\v5.0\include\builtin_types.h"
	.file	14	"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v5.0\bin\/../include\device_launch_parameters.h"
	.file	15	"c:\program files\nvidia gpu computing toolkit\cuda\v5.0\include\crt\storage_class.h"
	.file	16	"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v5.0\bin\/../include\common_functions.h"
	.file	17	"c:\program files\nvidia gpu computing toolkit\cuda\v5.0\include\math_functions.h"
	.file	18	"c:\program files\nvidia gpu computing toolkit\cuda\v5.0\include\math_constants.h"
	.file	19	"c:\program files\nvidia gpu computing toolkit\cuda\v5.0\include\device_functions.h"
	.file	20	"c:\program files\nvidia gpu computing toolkit\cuda\v5.0\include\sm_11_atomic_functions.h"
	.file	21	"c:\program files\nvidia gpu computing toolkit\cuda\v5.0\include\sm_12_atomic_functions.h"
	.file	22	"c:\program files\nvidia gpu computing toolkit\cuda\v5.0\include\sm_13_double_functions.h"
	.file	23	"c:\program files\nvidia gpu computing toolkit\cuda\v5.0\include\sm_20_atomic_functions.h"
	.file	24	"c:\program files\nvidia gpu computing toolkit\cuda\v5.0\include\sm_35_atomic_functions.h"
	.file	25	"c:\program files\nvidia gpu computing toolkit\cuda\v5.0\include\sm_20_intrinsics.h"
	.file	26	"c:\program files\nvidia gpu computing toolkit\cuda\v5.0\include\sm_30_intrinsics.h"
	.file	27	"c:\program files\nvidia gpu computing toolkit\cuda\v5.0\include\sm_35_intrinsics.h"
	.file	28	"c:\program files\nvidia gpu computing toolkit\cuda\v5.0\include\surface_functions.h"
	.file	29	"c:\program files\nvidia gpu computing toolkit\cuda\v5.0\include\texture_fetch_functions.h"
	.file	30	"c:\program files\nvidia gpu computing toolkit\cuda\v5.0\include\texture_indirect_functions.h"
	.file	31	"c:\program files\nvidia gpu computing toolkit\cuda\v5.0\include\surface_indirect_functions.h"
	.file	32	"c:\program files\nvidia gpu computing toolkit\cuda\v5.0\include\math_functions_dbl_ptx1.h"


	.entry ship (
		.param .u64 __cudaparm_ship_output,
		.param .u64 __cudaparm_ship_width,
		.param .u64 __cudaparm_ship_height,
		.param .u64 __cudaparm_ship_scale,
		.param .u64 __cudaparm_ship_origin_x,
		.param .u64 __cudaparm_ship_origin_y,
		.param .u64 __cudaparm_ship_threshold,
		.param .u64 __cudaparm_ship_iterations)
	{
	.reg .u16 %rh<8>;
	.reg .u32 %r<50>;
	.reg .u64 %rd<13>;
	.reg .f32 %f<15>;
	.reg .f64 %fd<36>;
	.reg .pred %p<8>;
	.loc	2	189	0
$LDWbegin_ship:
	.loc	2	191	0
	ld.param.u64 	%rd1, [__cudaparm_ship_width];
	ld.global.s32 	%r1, [%rd1+0];
	ld.param.u64 	%rd2, [__cudaparm_ship_height];
	ld.global.s32 	%r2, [%rd2+0];
	.loc	2	200	0
	mul.lo.s32 	%r3, %r1, %r2;
	mov.u16 	%rh1, %ntid.x;
	mov.u16 	%rh2, %ntid.y;
	mov.u16 	%rh3, %ctaid.x;
	mul.wide.u16 	%r4, %rh3, %rh1;
	mov.u16 	%rh4, %ctaid.y;
	mul.wide.u16 	%r5, %rh4, %rh2;
	mov.u16 	%rh5, %nctaid.x;
	mul.wide.u16 	%r6, %rh5, %rh1;
	cvt.rn.f64.u32 	%fd1, %r6;
	mov.u16 	%rh6, %nctaid.y;
	mul.wide.u16 	%r7, %rh6, %rh2;
	cvt.rn.f64.u32 	%fd2, %r7;
	mul.f64 	%fd3, %fd2, %fd1;
	cvt.rzi.s32.f64 	%r8, %fd3;
	cvt.u32.u16 	%r9, %tid.x;
	add.u32 	%r10, %r9, %r4;
	cvt.rn.f64.u32 	%fd4, %r10;
	cvt.u32.u16 	%r11, %tid.y;
	add.u32 	%r12, %r11, %r5;
	cvt.rn.f64.u32 	%fd5, %r12;
	mad.rn.f64 	%fd6, %fd1, %fd5, %fd4;
	rem.s32 	%r13, %r3, %r8;
	div.s32 	%r14, %r3, %r8;
	cvt.rzi.s32.f64 	%r15, %fd6;
	mov.s32 	%r16, 0;
	setp.gt.s32 	%p1, %r13, %r16;
	selp.s32 	%r17, 1, 0, %p1;
	add.s32 	%r18, %r14, %r17;
	mul.lo.s32 	%r19, %r15, %r18;
	mov.s32 	%r20, %r19;
	add.s32 	%r21, %r18, %r19;
	min.s32 	%r22, %r3, %r21;
	setp.le.s32 	%p2, %r22, %r19;
	@%p2 bra 	$Lt_0_4354;
	sub.s32 	%r23, %r22, %r19;
	mov.s32 	%r24, 1;
	max.s32 	%r25, %r23, %r24;
	shr.s32 	%r26, %r1, 31;
	mov.s32 	%r27, 1;
	and.b32 	%r28, %r26, %r27;
	add.s32 	%r29, %r28, %r1;
	shr.s32 	%r30, %r29, 1;
	shr.s32 	%r31, %r2, 31;
	mov.s32 	%r32, 1;
	and.b32 	%r33, %r31, %r32;
	add.s32 	%r34, %r33, %r2;
	shr.s32 	%r35, %r34, 1;
	cvt.rn.f64.s32 	%fd7, %r30;
	cvt.rn.f32.s32 	%f1, %r30;
	cvt.rn.f64.s32 	%fd8, %r35;
	cvt.rn.f32.s32 	%f2, %r35;
	ld.param.u64 	%rd3, [__cudaparm_ship_output];
	ld.param.u64 	%rd4, [__cudaparm_ship_iterations];
	ld.param.u64 	%rd5, [__cudaparm_ship_origin_y];
	ld.param.u64 	%rd6, [__cudaparm_ship_origin_x];
	ld.param.u64 	%rd7, [__cudaparm_ship_scale];
	mov.s32 	%r36, %r25;
$Lt_0_4866:
 //<loop> Loop body line 200, nesting depth: 1, estimated iterations: unknown
	ld.param.u64 	%rd7, [__cudaparm_ship_scale];
	.loc	2	202	0
	ld.global.f32 	%f3, [%rd7+0];
	cvt.f64.f32 	%fd9, %f3;
	rem.s32 	%r37, %r20, %r1;
	cvt.rn.f64.s32 	%fd10, %r37;
	sub.f64 	%fd11, %fd7, %fd10;
	mul.f64 	%fd12, %fd9, %fd11;
	cvt.rn.f32.f64 	%f4, %fd12;
	div.full.f32 	%f5, %f4, %f1;
	cvt.f64.f32 	%fd13, %f5;
	.loc	2	200	0
	ld.param.u64 	%rd6, [__cudaparm_ship_origin_x];
	.loc	2	202	0
	ld.global.f32 	%f6, [%rd6+0];
	cvt.f64.f32 	%fd14, %f6;
	sub.f64 	%fd15, %fd13, %fd14;
	.loc	2	203	0
	div.s32 	%r38, %r20, %r1;
	cvt.rn.f64.s32 	%fd16, %r38;
	sub.f64 	%fd17, %fd8, %fd16;
	mul.f64 	%fd18, %fd9, %fd17;
	cvt.rn.f32.f64 	%f7, %fd18;
	div.full.f32 	%f8, %f7, %f2;
	cvt.f64.f32 	%fd19, %f8;
	.loc	2	200	0
	ld.param.u64 	%rd5, [__cudaparm_ship_origin_y];
	.loc	2	203	0
	ld.global.f32 	%f9, [%rd5+0];
	cvt.f64.f32 	%fd20, %f9;
	sub.f64 	%fd21, %fd19, %fd20;
	.loc	2	205	0
	mov.f64 	%fd22, %fd15;
	mov.f64 	%fd23, %fd21;
	.loc	2	200	0
	ld.param.u64 	%rd4, [__cudaparm_ship_iterations];
	.loc	2	205	0
	ld.global.s32 	%r39, [%rd4+0];
	mov.u32 	%r40, 0;
	setp.le.s32 	%p3, %r39, %r40;
	@%p3 bra 	$Lt_0_6658;
	mov.s32 	%r41, 1;
	max.s32 	%r42, %r39, %r41;
	ld.param.u64 	%rd8, [__cudaparm_ship_threshold];
	ld.global.f32 	%f10, [%rd8+0];
	cvt.f64.f32 	%fd24, %f10;
	mov.s32 	%r43, 0;
	mov.s32 	%r44, %r42;
$Lt_0_5634:
 //<loop> Loop body line 205, nesting depth: 2, estimated iterations: unknown
	.loc	2	143	0
	abs.f64 	%fd25, %fd22;
	abs.f64 	%fd26, %fd23;
	mul.f64 	%fd27, %fd25, %fd26;
	mad.rn.f64 	%fd28, %fd25, %fd26, %fd27;
	.loc	2	210	0
	mul.f64 	%fd29, %fd26, %fd26;
	mul.f64 	%fd30, %fd25, %fd25;
	sub.f64 	%fd31, %fd30, %fd29;
	.loc	2	211	0
	add.f64 	%fd22, %fd15, %fd31;
	add.f64 	%fd32, %fd28, %fd21;
	mov.f64 	%fd23, %fd32;
	.loc	2	214	0
	mul.f64 	%fd33, %fd32, %fd32;
	mad.rn.f64 	%fd34, %fd22, %fd22, %fd33;
	setp.lt.f64 	%p4, %fd24, %fd34;
	@%p4 bra 	$Lt_0_5122;
	.loc	2	207	0
	add.s32 	%r43, %r43, 1;
	setp.gt.s32 	%p5, %r39, %r43;
	@%p5 bra 	$Lt_0_5634;
	bra.uni 	$Lt_0_5122;
$Lt_0_6658:
	mov.s32 	%r43, 0;
$Lt_0_5122:
$LDWendi_fdividef_251_1:
	.loc	2	159	0
	cvt.rn.f32.s32 	%f11, %r43;
	cvt.rn.f32.s32 	%f12, %r39;
	div.full.f32 	%f13, %f11, %f12;
	cvt.rzi.s32.f64 	%r45, %fd10;
	cvt.rzi.s32.f64 	%r46, %fd16;
	mul.lo.s32 	%r47, %r1, %r46;
	add.s32 	%r48, %r45, %r47;
	cvt.s64.s32 	%rd9, %r48;
	mul.wide.s32 	%rd10, %r48, 4;
	.loc	2	200	0
	ld.param.u64 	%rd3, [__cudaparm_ship_output];
	.loc	2	159	0
	add.u64 	%rd11, %rd3, %rd10;
	st.global.f32 	[%rd11+0], %f13;
	.loc	2	200	0
	add.s32 	%r20, %r20, 1;
	setp.gt.s32 	%p6, %r22, %r20;
	@%p6 bra 	$Lt_0_4866;
$Lt_0_4354:
	.loc	2	219	0
	exit;
$LDWend_ship:
	} // ship

	.entry mandelbrot (
		.param .u64 __cudaparm_mandelbrot_output,
		.param .u64 __cudaparm_mandelbrot_width,
		.param .u64 __cudaparm_mandelbrot_height,
		.param .u64 __cudaparm_mandelbrot_scale,
		.param .u64 __cudaparm_mandelbrot_origin_x,
		.param .u64 __cudaparm_mandelbrot_origin_y,
		.param .u64 __cudaparm_mandelbrot_threshold,
		.param .u64 __cudaparm_mandelbrot_iterations)
	{
	.reg .u16 %rh<8>;
	.reg .u32 %r<50>;
	.reg .u64 %rd<13>;
	.reg .f32 %f<15>;
	.reg .f64 %fd<34>;
	.reg .pred %p<8>;
	.loc	2	229	0
$LDWbegin_mandelbrot:
	.loc	2	231	0
	ld.param.u64 	%rd1, [__cudaparm_mandelbrot_width];
	ld.global.s32 	%r1, [%rd1+0];
	ld.param.u64 	%rd2, [__cudaparm_mandelbrot_height];
	ld.global.s32 	%r2, [%rd2+0];
	.loc	2	240	0
	mul.lo.s32 	%r3, %r1, %r2;
	mov.u16 	%rh1, %ntid.x;
	mov.u16 	%rh2, %ntid.y;
	mov.u16 	%rh3, %ctaid.x;
	mul.wide.u16 	%r4, %rh3, %rh1;
	mov.u16 	%rh4, %ctaid.y;
	mul.wide.u16 	%r5, %rh4, %rh2;
	mov.u16 	%rh5, %nctaid.x;
	mul.wide.u16 	%r6, %rh5, %rh1;
	cvt.rn.f64.u32 	%fd1, %r6;
	mov.u16 	%rh6, %nctaid.y;
	mul.wide.u16 	%r7, %rh6, %rh2;
	cvt.rn.f64.u32 	%fd2, %r7;
	mul.f64 	%fd3, %fd2, %fd1;
	cvt.rzi.s32.f64 	%r8, %fd3;
	cvt.u32.u16 	%r9, %tid.x;
	add.u32 	%r10, %r9, %r4;
	cvt.rn.f64.u32 	%fd4, %r10;
	cvt.u32.u16 	%r11, %tid.y;
	add.u32 	%r12, %r11, %r5;
	cvt.rn.f64.u32 	%fd5, %r12;
	mad.rn.f64 	%fd6, %fd1, %fd5, %fd4;
	rem.s32 	%r13, %r3, %r8;
	div.s32 	%r14, %r3, %r8;
	cvt.rzi.s32.f64 	%r15, %fd6;
	mov.s32 	%r16, 0;
	setp.gt.s32 	%p1, %r13, %r16;
	selp.s32 	%r17, 1, 0, %p1;
	add.s32 	%r18, %r14, %r17;
	mul.lo.s32 	%r19, %r15, %r18;
	mov.s32 	%r20, %r19;
	add.s32 	%r21, %r18, %r19;
	min.s32 	%r22, %r3, %r21;
	setp.le.s32 	%p2, %r22, %r19;
	@%p2 bra 	$Lt_1_3330;
	sub.s32 	%r23, %r22, %r19;
	mov.s32 	%r24, 1;
	max.s32 	%r25, %r23, %r24;
	shr.s32 	%r26, %r1, 31;
	mov.s32 	%r27, 1;
	and.b32 	%r28, %r26, %r27;
	add.s32 	%r29, %r28, %r1;
	shr.s32 	%r30, %r29, 1;
	shr.s32 	%r31, %r2, 31;
	mov.s32 	%r32, 1;
	and.b32 	%r33, %r31, %r32;
	add.s32 	%r34, %r33, %r2;
	shr.s32 	%r35, %r34, 1;
	cvt.rn.f64.s32 	%fd7, %r30;
	cvt.rn.f32.s32 	%f1, %r30;
	cvt.rn.f64.s32 	%fd8, %r35;
	cvt.rn.f32.s32 	%f2, %r35;
	ld.param.u64 	%rd3, [__cudaparm_mandelbrot_output];
	ld.param.u64 	%rd4, [__cudaparm_mandelbrot_iterations];
	ld.param.u64 	%rd5, [__cudaparm_mandelbrot_origin_y];
	ld.param.u64 	%rd6, [__cudaparm_mandelbrot_origin_x];
	ld.param.u64 	%rd7, [__cudaparm_mandelbrot_scale];
	mov.s32 	%r36, %r25;
$Lt_1_3842:
 //<loop> Loop body line 240, nesting depth: 1, estimated iterations: unknown
	ld.param.u64 	%rd7, [__cudaparm_mandelbrot_scale];
	.loc	2	242	0
	ld.global.f32 	%f3, [%rd7+0];
	cvt.f64.f32 	%fd9, %f3;
	rem.s32 	%r37, %r20, %r1;
	cvt.rn.f64.s32 	%fd10, %r37;
	sub.f64 	%fd11, %fd7, %fd10;
	mul.f64 	%fd12, %fd9, %fd11;
	cvt.rn.f32.f64 	%f4, %fd12;
	div.full.f32 	%f5, %f4, %f1;
	cvt.f64.f32 	%fd13, %f5;
	.loc	2	240	0
	ld.param.u64 	%rd6, [__cudaparm_mandelbrot_origin_x];
	.loc	2	242	0
	ld.global.f32 	%f6, [%rd6+0];
	cvt.f64.f32 	%fd14, %f6;
	sub.f64 	%fd15, %fd13, %fd14;
	.loc	2	243	0
	div.s32 	%r38, %r20, %r1;
	cvt.rn.f64.s32 	%fd16, %r38;
	sub.f64 	%fd17, %fd8, %fd16;
	mul.f64 	%fd18, %fd9, %fd17;
	cvt.rn.f32.f64 	%f7, %fd18;
	div.full.f32 	%f8, %f7, %f2;
	cvt.f64.f32 	%fd19, %f8;
	.loc	2	240	0
	ld.param.u64 	%rd5, [__cudaparm_mandelbrot_origin_y];
	.loc	2	243	0
	ld.global.f32 	%f9, [%rd5+0];
	cvt.f64.f32 	%fd20, %f9;
	sub.f64 	%fd21, %fd19, %fd20;
	.loc	2	245	0
	mov.f64 	%fd22, %fd15;
	mov.f64 	%fd23, %fd21;
	.loc	2	240	0
	ld.param.u64 	%rd4, [__cudaparm_mandelbrot_iterations];
	.loc	2	245	0
	ld.global.s32 	%r39, [%rd4+0];
	mov.u32 	%r40, 0;
	setp.le.s32 	%p3, %r39, %r40;
	@%p3 bra 	$Lt_1_5634;
	mov.s32 	%r41, 1;
	max.s32 	%r42, %r39, %r41;
	ld.param.u64 	%rd8, [__cudaparm_mandelbrot_threshold];
	ld.global.f32 	%f10, [%rd8+0];
	cvt.f64.f32 	%fd24, %f10;
	mov.s32 	%r43, 0;
	mov.s32 	%r44, %r42;
$Lt_1_4610:
 //<loop> Loop body line 245, nesting depth: 2, estimated iterations: unknown
	.loc	2	143	0
	mul.f64 	%fd25, %fd22, %fd23;
	mad.rn.f64 	%fd26, %fd22, %fd23, %fd25;
	.loc	2	249	0
	mul.f64 	%fd27, %fd23, %fd23;
	mul.f64 	%fd28, %fd22, %fd22;
	sub.f64 	%fd29, %fd28, %fd27;
	.loc	2	250	0
	add.f64 	%fd22, %fd15, %fd29;
	add.f64 	%fd30, %fd26, %fd21;
	mov.f64 	%fd23, %fd30;
	.loc	2	253	0
	mul.f64 	%fd31, %fd30, %fd30;
	mad.rn.f64 	%fd32, %fd22, %fd22, %fd31;
	setp.lt.f64 	%p4, %fd24, %fd32;
	@%p4 bra 	$Lt_1_4098;
	.loc	2	247	0
	add.s32 	%r43, %r43, 1;
	setp.gt.s32 	%p5, %r39, %r43;
	@%p5 bra 	$Lt_1_4610;
	bra.uni 	$Lt_1_4098;
$Lt_1_5634:
	mov.s32 	%r43, 0;
$Lt_1_4098:
$LDWendi_fdividef_252_1:
	.loc	2	159	0
	cvt.rn.f32.s32 	%f11, %r43;
	cvt.rn.f32.s32 	%f12, %r39;
	div.full.f32 	%f13, %f11, %f12;
	cvt.rzi.s32.f64 	%r45, %fd10;
	cvt.rzi.s32.f64 	%r46, %fd16;
	mul.lo.s32 	%r47, %r1, %r46;
	add.s32 	%r48, %r45, %r47;
	cvt.s64.s32 	%rd9, %r48;
	mul.wide.s32 	%rd10, %r48, 4;
	.loc	2	240	0
	ld.param.u64 	%rd3, [__cudaparm_mandelbrot_output];
	.loc	2	159	0
	add.u64 	%rd11, %rd3, %rd10;
	st.global.f32 	[%rd11+0], %f13;
	.loc	2	240	0
	add.s32 	%r20, %r20, 1;
	setp.gt.s32 	%p6, %r22, %r20;
	@%p6 bra 	$Lt_1_3842;
$Lt_1_3330:
	.loc	2	258	0
	exit;
$LDWend_mandelbrot:
	} // mandelbrot

	.entry julia (
		.param .u64 __cudaparm_julia_output,
		.param .u64 __cudaparm_julia_width,
		.param .u64 __cudaparm_julia_height,
		.param .u64 __cudaparm_julia_scale,
		.param .u64 __cudaparm_julia_origin_x,
		.param .u64 __cudaparm_julia_origin_y,
		.param .u64 __cudaparm_julia_seed_r,
		.param .u64 __cudaparm_julia_seed_i,
		.param .u64 __cudaparm_julia_threshold,
		.param .u64 __cudaparm_julia_iterations)
	{
	.reg .u16 %rh<8>;
	.reg .u32 %r<50>;
	.reg .u64 %rd<15>;
	.reg .f32 %f<17>;
	.reg .f64 %fd<34>;
	.reg .pred %p<8>;
	.loc	2	270	0
$LDWbegin_julia:
	.loc	2	272	0
	ld.param.u64 	%rd1, [__cudaparm_julia_seed_r];
	ld.global.f32 	%f1, [%rd1+0];
	cvt.f64.f32 	%fd1, %f1;
	ld.param.u64 	%rd2, [__cudaparm_julia_seed_i];
	ld.global.f32 	%f2, [%rd2+0];
	cvt.f64.f32 	%fd2, %f2;
	.loc	2	273	0
	ld.param.u64 	%rd3, [__cudaparm_julia_width];
	ld.global.s32 	%r1, [%rd3+0];
	ld.param.u64 	%rd4, [__cudaparm_julia_height];
	ld.global.s32 	%r2, [%rd4+0];
	.loc	2	282	0
	mul.lo.s32 	%r3, %r1, %r2;
	mov.u16 	%rh1, %ntid.x;
	mov.u16 	%rh2, %ntid.y;
	mov.u16 	%rh3, %ctaid.x;
	mul.wide.u16 	%r4, %rh3, %rh1;
	mov.u16 	%rh4, %ctaid.y;
	mul.wide.u16 	%r5, %rh4, %rh2;
	mov.u16 	%rh5, %nctaid.x;
	mul.wide.u16 	%r6, %rh5, %rh1;
	cvt.rn.f64.u32 	%fd3, %r6;
	mov.u16 	%rh6, %nctaid.y;
	mul.wide.u16 	%r7, %rh6, %rh2;
	cvt.rn.f64.u32 	%fd4, %r7;
	mul.f64 	%fd5, %fd4, %fd3;
	cvt.rzi.s32.f64 	%r8, %fd5;
	cvt.u32.u16 	%r9, %tid.x;
	add.u32 	%r10, %r9, %r4;
	cvt.rn.f64.u32 	%fd6, %r10;
	cvt.u32.u16 	%r11, %tid.y;
	add.u32 	%r12, %r11, %r5;
	cvt.rn.f64.u32 	%fd7, %r12;
	mad.rn.f64 	%fd8, %fd3, %fd7, %fd6;
	rem.s32 	%r13, %r3, %r8;
	div.s32 	%r14, %r3, %r8;
	cvt.rzi.s32.f64 	%r15, %fd8;
	mov.s32 	%r16, 0;
	setp.gt.s32 	%p1, %r13, %r16;
	selp.s32 	%r17, 1, 0, %p1;
	add.s32 	%r18, %r14, %r17;
	mul.lo.s32 	%r19, %r15, %r18;
	mov.s32 	%r20, %r19;
	add.s32 	%r21, %r18, %r19;
	min.s32 	%r22, %r3, %r21;
	setp.le.s32 	%p2, %r22, %r19;
	@%p2 bra 	$Lt_2_3330;
	sub.s32 	%r23, %r22, %r19;
	mov.s32 	%r24, 1;
	max.s32 	%r25, %r23, %r24;
	shr.s32 	%r26, %r1, 31;
	mov.s32 	%r27, 1;
	and.b32 	%r28, %r26, %r27;
	add.s32 	%r29, %r28, %r1;
	shr.s32 	%r30, %r29, 1;
	shr.s32 	%r31, %r2, 31;
	mov.s32 	%r32, 1;
	and.b32 	%r33, %r31, %r32;
	add.s32 	%r34, %r33, %r2;
	shr.s32 	%r35, %r34, 1;
	cvt.rn.f64.s32 	%fd9, %r30;
	cvt.rn.f32.s32 	%f3, %r30;
	cvt.rn.f64.s32 	%fd10, %r35;
	cvt.rn.f32.s32 	%f4, %r35;
	ld.param.u64 	%rd5, [__cudaparm_julia_output];
	ld.param.u64 	%rd6, [__cudaparm_julia_iterations];
	ld.param.u64 	%rd7, [__cudaparm_julia_origin_y];
	ld.param.u64 	%rd8, [__cudaparm_julia_origin_x];
	ld.param.u64 	%rd9, [__cudaparm_julia_scale];
	mov.s32 	%r36, %r25;
$Lt_2_3842:
 //<loop> Loop body line 282, nesting depth: 1, estimated iterations: unknown
	ld.param.u64 	%rd9, [__cudaparm_julia_scale];
	.loc	2	287	0
	ld.global.f32 	%f5, [%rd9+0];
	cvt.f64.f32 	%fd11, %f5;
	rem.s32 	%r37, %r20, %r1;
	cvt.rn.f64.s32 	%fd12, %r37;
	sub.f64 	%fd13, %fd9, %fd12;
	mul.f64 	%fd14, %fd11, %fd13;
	cvt.rn.f32.f64 	%f6, %fd14;
	div.full.f32 	%f7, %f6, %f3;
	cvt.f64.f32 	%fd15, %f7;
	.loc	2	282	0
	ld.param.u64 	%rd8, [__cudaparm_julia_origin_x];
	.loc	2	287	0
	ld.global.f32 	%f8, [%rd8+0];
	cvt.f64.f32 	%fd16, %f8;
	sub.f64 	%fd17, %fd15, %fd16;
	div.s32 	%r38, %r20, %r1;
	cvt.rn.f64.s32 	%fd18, %r38;
	sub.f64 	%fd19, %fd10, %fd18;
	mul.f64 	%fd20, %fd11, %fd19;
	cvt.rn.f32.f64 	%f9, %fd20;
	div.full.f32 	%f10, %f9, %f4;
	cvt.f64.f32 	%fd21, %f10;
	.loc	2	282	0
	ld.param.u64 	%rd7, [__cudaparm_julia_origin_y];
	.loc	2	287	0
	ld.global.f32 	%f11, [%rd7+0];
	cvt.f64.f32 	%fd22, %f11;
	sub.f64 	%fd23, %fd21, %fd22;
	.loc	2	282	0
	ld.param.u64 	%rd6, [__cudaparm_julia_iterations];
	.loc	2	287	0
	ld.global.s32 	%r39, [%rd6+0];
	mov.u32 	%r40, 0;
	setp.le.s32 	%p3, %r39, %r40;
	@%p3 bra 	$Lt_2_5634;
	mov.s32 	%r41, 1;
	max.s32 	%r42, %r39, %r41;
	ld.param.u64 	%rd10, [__cudaparm_julia_threshold];
	ld.global.f32 	%f12, [%rd10+0];
	cvt.f64.f32 	%fd24, %f12;
	mov.s32 	%r43, 0;
	mov.s32 	%r44, %r42;
$Lt_2_4610:
 //<loop> Loop body line 287, nesting depth: 2, estimated iterations: unknown
	.loc	2	143	0
	mul.f64 	%fd25, %fd17, %fd23;
	mad.rn.f64 	%fd26, %fd17, %fd23, %fd25;
	.loc	2	291	0
	mul.f64 	%fd27, %fd23, %fd23;
	mul.f64 	%fd28, %fd17, %fd17;
	sub.f64 	%fd29, %fd28, %fd27;
	.loc	2	292	0
	add.f64 	%fd17, %fd1, %fd29;
	add.f64 	%fd30, %fd2, %fd26;
	mov.f64 	%fd23, %fd30;
	.loc	2	295	0
	mul.f64 	%fd31, %fd30, %fd30;
	mad.rn.f64 	%fd32, %fd17, %fd17, %fd31;
	setp.lt.f64 	%p4, %fd24, %fd32;
	@%p4 bra 	$Lt_2_4098;
	.loc	2	289	0
	add.s32 	%r43, %r43, 1;
	setp.gt.s32 	%p5, %r39, %r43;
	@%p5 bra 	$Lt_2_4610;
	bra.uni 	$Lt_2_4098;
$Lt_2_5634:
	mov.s32 	%r43, 0;
$Lt_2_4098:
$Lt_2_258:
	.loc	2	159	0
	cvt.rn.f32.s32 	%f13, %r43;
	cvt.rn.f32.s32 	%f14, %r39;
	div.full.f32 	%f15, %f13, %f14;
	cvt.rzi.s32.f64 	%r45, %fd12;
	cvt.rzi.s32.f64 	%r46, %fd18;
	mul.lo.s32 	%r47, %r1, %r46;
	add.s32 	%r48, %r45, %r47;
	cvt.s64.s32 	%rd11, %r48;
	mul.wide.s32 	%rd12, %r48, 4;
	.loc	2	282	0
	ld.param.u64 	%rd5, [__cudaparm_julia_output];
	.loc	2	159	0
	add.u64 	%rd13, %rd5, %rd12;
	st.global.f32 	[%rd13+0], %f15;
	.loc	2	282	0
	add.s32 	%r20, %r20, 1;
	setp.gt.s32 	%p6, %r22, %r20;
	@%p6 bra 	$Lt_2_3842;
$Lt_2_3330:
	.loc	2	300	0
	exit;
$LDWend_julia:
	} // julia

	.entry fern (
		.param .u64 __cudaparm_fern_output,
		.param .u64 __cudaparm_fern_width,
		.param .u64 __cudaparm_fern_height,
		.param .u64 __cudaparm_fern_iterations,
		.param .u64 __cudaparm_fern_random_a,
		.param .u64 __cudaparm_fern_random_b)
	{
	.reg .u32 %r<38>;
	.reg .u64 %rd<11>;
	.reg .f32 %f<21>;
	.reg .f64 %fd<44>;
	.reg .pred %p<7>;
	.loc	2	308	0
$LDWbegin_fern:
	.loc	2	311	0
	ld.param.u64 	%rd1, [__cudaparm_fern_width];
	ld.global.s32 	%r1, [%rd1+0];
	.loc	2	165	0
	ld.param.u64 	%rd2, [__cudaparm_fern_random_a];
	ld.global.u32 	%r2, [%rd2+0];
	.loc	2	166	0
	ld.param.u64 	%rd3, [__cudaparm_fern_random_b];
	ld.global.u32 	%r3, [%rd3+0];
	.loc	2	167	0
	xor.b32 	%r4, %r2, %r3;
	.loc	2	168	0
	mov.s32 	%r5, -83941;
	mul.hi.s32 	%r6, %r2, %r5;
	.loc	2	169	0
	mul.lo.u32 	%r7, %r2, -83941;
	add.u32 	%r8, %r3, %r7;
	.loc	2	170	0
	set.lt.u32.u32 	%r9, %r8, %r3;
	neg.s32 	%r10, %r9;
	add.u32 	%r11, %r10, %r6;
	.loc	2	171	0
	st.global.u32 	[%rd2+0], %r8;
	.loc	2	172	0
	st.global.u32 	[%rd3+0], %r11;
	.loc	2	315	0
	cvt.rn.f32.u32 	%f1, %r4;
	mov.f32 	%f2, 0f2f800000;     	// 2.32831e-010
	mul.f32 	%f3, %f1, %f2;
	cvt.f64.f32 	%fd1, %f3;
	.loc	2	165	0
	ld.global.u32 	%r12, [%rd2+0];
	.loc	2	167	0
	xor.b32 	%r13, %r12, %r11;
	.loc	2	168	0
	mov.s32 	%r14, -83941;
	mul.hi.s32 	%r15, %r12, %r14;
	.loc	2	169	0
	mul.lo.u32 	%r16, %r12, -83941;
	add.u32 	%r17, %r11, %r16;
	.loc	2	170	0
	set.lt.u32.u32 	%r18, %r17, %r11;
	neg.s32 	%r19, %r18;
	add.u32 	%r20, %r19, %r15;
	.loc	2	171	0
	st.global.u32 	[%rd2+0], %r17;
	.loc	2	172	0
	st.global.u32 	[%rd3+0], %r20;
	.loc	2	315	0
	cvt.rn.f32.u32 	%f4, %r13;
	mov.f32 	%f5, 0f2f800000;     	// 2.32831e-010
	mul.f32 	%f6, %f4, %f5;
	cvt.f64.f32 	%fd2, %f6;
	ld.param.u64 	%rd4, [__cudaparm_fern_iterations];
	ld.global.s32 	%r21, [%rd4+0];
	mov.u32 	%r22, 0;
	setp.le.s32 	%p1, %r21, %r22;
	@%p1 bra 	$Lt_3_5122;
	ld.param.u64 	%rd5, [__cudaparm_fern_output];
	ld.param.u64 	%rd6, [__cudaparm_fern_height];
	mov.s32 	%r23, 0;
$Lt_3_5634:
 //<loop> Loop body line 315, nesting depth: 1, estimated iterations: unknown
	.loc	2	165	0
	ld.param.u64 	%rd2, [__cudaparm_fern_random_a];
	ld.global.u32 	%r24, [%rd2+0];
	.loc	2	166	0
	ld.param.u64 	%rd3, [__cudaparm_fern_random_b];
	ld.global.u32 	%r25, [%rd3+0];
	.loc	2	167	0
	xor.b32 	%r13, %r24, %r25;
	.loc	2	168	0
	mov.s32 	%r26, -83941;
	mul.hi.s32 	%r15, %r24, %r26;
	.loc	2	169	0
	mul.lo.u32 	%r27, %r24, -83941;
	add.u32 	%r17, %r25, %r27;
	.loc	2	170	0
	set.lt.u32.u32 	%r28, %r17, %r25;
	neg.s32 	%r29, %r28;
	add.u32 	%r20, %r29, %r15;
	.loc	2	171	0
	st.global.u32 	[%rd2+0], %r17;
	.loc	2	172	0
	st.global.u32 	[%rd3+0], %r20;
	.loc	2	320	0
	mov.f64 	%fd3, %fd1;
	cvt.rn.f32.u32 	%f7, %r13;
	mov.f32 	%f8, 0f2f800000;     	// 2.32831e-010
	mul.f32 	%f9, %f7, %f8;
	cvt.f64.f32 	%fd4, %f9;
	mov.f64 	%fd5, 0d3f847ae140000000;	// 0.01
	setp.lt.f64 	%p2, %fd4, %fd5;
	@!%p2 bra 	$Lt_3_6146;
	.loc	2	325	0
	mov.f64 	%fd6, 0d3fc47ae140000000;	// 0.16
	mul.f64 	%fd2, %fd2, %fd6;
	mov.f64 	%fd1, 0d0000000000000000;	// 0
	bra.uni 	$Lt_3_5890;
$Lt_3_6146:
	mov.f64 	%fd7, 0d3feb851ec0000000;	// 0.86
	setp.lt.f64 	%p3, %fd4, %fd7;
	@!%p3 bra 	$Lt_3_6658;
	.loc	2	329	0
	mov.f64 	%fd8, 0d3fa47ae140000000;	// 0.04
	mul.f64 	%fd9, %fd2, %fd8;
	mov.f64 	%fd10, 0d3feb333340000000;	// 0.85
	mad.rn.f64 	%fd1, %fd10, %fd3, %fd9;
	.loc	2	330	0
	mov.f64 	%fd11, 0dbfa47ae140000000;	// -0.04
	mul.f64 	%fd12, %fd3, %fd11;
	mov.f64 	%fd13, 0d3feb333340000000;	// 0.85
	mad.rn.f64 	%fd14, %fd13, %fd2, %fd12;
	mov.f64 	%fd15, 0d3ff99999a0000000;	// 1.6
	add.f64 	%fd2, %fd14, %fd15;
	bra.uni 	$Lt_3_6402;
$Lt_3_6658:
	mov.f64 	%fd16, 0d3fedc28f60000000;	// 0.93
	setp.lt.f64 	%p4, %fd4, %fd16;
	@!%p4 bra 	$Lt_3_7170;
	.loc	2	334	0
	mov.f64 	%fd17, 0d3fd0a3d700000000;	// 0.26
	mul.f64 	%fd18, %fd2, %fd17;
	mov.f64 	%fd19, 0d3fc99999a0000000;	// 0.2
	mul.f64 	%fd20, %fd19, %fd3;
	sub.f64 	%fd1, %fd20, %fd18;
	.loc	2	335	0
	mov.f64 	%fd21, 0d3fcc28f5c0000000;	// 0.22
	mul.f64 	%fd22, %fd2, %fd21;
	mov.f64 	%fd23, 0d3fcd70a3e0000000;	// 0.23
	mad.rn.f64 	%fd24, %fd23, %fd3, %fd22;
	mov.f64 	%fd25, 0d3ff99999a0000000;	// 1.6
	add.f64 	%fd2, %fd24, %fd25;
	bra.uni 	$Lt_3_6914;
$Lt_3_7170:
	.loc	2	339	0
	mov.f64 	%fd26, 0d3fd1eb8520000000;	// 0.28
	mul.f64 	%fd27, %fd2, %fd26;
	mov.f64 	%fd28, 0dbfc3333340000000;	// -0.15
	mad.rn.f64 	%fd1, %fd28, %fd3, %fd27;
	.loc	2	340	0
	mov.f64 	%fd29, 0d3fceb851e0000000;	// 0.24
	mul.f64 	%fd30, %fd2, %fd29;
	mov.f64 	%fd31, 0d3fd0a3d700000000;	// 0.26
	mad.rn.f64 	%fd32, %fd31, %fd3, %fd30;
	mov.f64 	%fd33, 0d3fdc28f5c0000000;	// 0.44
	add.f64 	%fd2, %fd32, %fd33;
$Lt_3_6914:
$Lt_3_6402:
$Lt_3_5890:
	.loc	2	311	0
	ld.param.u64 	%rd1, [__cudaparm_fern_width];
	.loc	2	343	0
	ld.global.s32 	%r30, [%rd1+0];
	cvt.rn.f32.s32 	%f10, %r30;
	cvt.rn.f64.s32 	%fd34, %r30;
	mul.f64 	%fd35, %fd34, %fd1;
	.loc	2	315	0
	ld.param.u64 	%rd6, [__cudaparm_fern_height];
	.loc	2	344	0
	ld.global.s32 	%r31, [%rd6+0];
	cvt.rn.f64.s32 	%fd36, %r31;
	mul.f64 	%fd37, %fd36, %fd2;
	cvt.rn.f32.f64 	%f11, %fd37;
	mov.f32 	%f12, 0f41400000;    	// 12
	div.full.f32 	%f13, %f11, %f12;
	cvt.f64.f32 	%fd38, %f13;
	sub.f64 	%fd39, %fd36, %fd38;
	.loc	2	159	0
	mov.f32 	%f14, 0f3f000000;    	// 0.5
	cvt.rn.f32.f64 	%f15, %fd35;
	mov.f32 	%f16, 0f41200000;    	// 10
	div.full.f32 	%f17, %f15, %f16;
	cvt.f64.f32 	%fd40, %f17;
	mov.f32 	%f18, 0f3f000000;    	// 0.5
	mul.f32 	%f19, %f10, %f18;
	cvt.f64.f32 	%fd41, %f19;
	add.f64 	%fd42, %fd40, %fd41;
	cvt.rzi.s32.f64 	%r32, %fd42;
	cvt.rzi.s32.f64 	%r33, %fd39;
	mul.lo.s32 	%r34, %r1, %r33;
	add.s32 	%r35, %r32, %r34;
	cvt.s64.s32 	%rd7, %r35;
	mul.wide.s32 	%rd8, %r35, 4;
	.loc	2	315	0
	ld.param.u64 	%rd5, [__cudaparm_fern_output];
	.loc	2	159	0
	add.u64 	%rd9, %rd5, %rd8;
	st.global.f32 	[%rd9+0], %f14;
	.loc	2	317	0
	add.s32 	%r23, %r23, 1;
	.loc	2	315	0
	ld.param.u64 	%rd4, [__cudaparm_fern_iterations];
	.loc	2	317	0
	ld.global.s32 	%r36, [%rd4+0];
	setp.gt.s32 	%p5, %r36, %r23;
	@%p5 bra 	$Lt_3_5634;
$Lt_3_5122:
	.loc	2	348	0
	exit;
$LDWend_fern:
	} // fern

